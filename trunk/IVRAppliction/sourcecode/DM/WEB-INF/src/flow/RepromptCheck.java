package flow;

/**
 * The Data class handles many types of server-side operations including data
 * collection (from a data sources such as a database, or web service), variable
 * assignments and operations (like copying variable values, performing mathematic
 * operations, and collection iteration), conditional evaluation to control callflow
 * execution based on variable values, and logging/tracing statements.
 * 
 * Items created in the getDataActions() method are executed/evaluated in order
 * and if a condional branch condition evaluates to "true" then the branch is
 * activated and the execution of data actions is halted.  If no "true" conditions
 * are encountered, then all data actions will be executed/evaluated and the 
 * application will proceed to the "Default" servlet.
 * Last generated by Orchestration Designer at: 2013-OCT-09  11:53:20 AM
 */
public class RepromptCheck extends com.avaya.sce.runtime.Data {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2013-OCT-09  11:53:20 AM
	 */
	public RepromptCheck() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * Returns the Next item which will forward application execution
	 * to the next form in the call flow.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:35 PM
	 */
	public com.avaya.sce.runtime.Next getNext(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Next next = null;
		return next;
	}
	/**
	 * Create a list of local variables used by items in the data node.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:35 PM
	 */
	public java.util.Collection<VariableInfo> getLocalVariables(){
		java.util.Collection<VariableInfo> variables = new java.util.ArrayList<VariableInfo>();

		return variables;
	}
	/**
	 * Creates and conditionally executes operations that have been configured
	 * in the Callflow.  This method will build a collection of operations and
	 * have the framework execute the operations by calling evaluateActions().
	 * If the evaluation causes the framework to forward to a different servlet
	 * then execution stops.
	 * Returning true from this method means that the framework has forwarded the
	 * request to a different servlet.  Returning false means that the default
	 * Next will be invoked.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:35 PM
	 */
	public boolean executeDataActions(com.avaya.sce.runtimecommon.SCESession mySession) throws Exception {
		java.util.Collection actions = null;

		actions = new java.util.ArrayList(1);
		if(evaluateActions(actions, mySession)) {
			return true;
		}
		actions = null;

		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition1", "FLAGS:MAXTRY", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(479)).evaluate(mySession)) {
			actions = new java.util.ArrayList(3);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("FLAGS:MAXTRY", "CONSTANTS:FALSE", false).setDebugId(480));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("FLAGS:TRIESEXCEEDED", "CONSTANTS:TRUE", false).setDebugId(1959));
			actions.add(new com.avaya.sce.runtime.Next("SetOutputParams", "TriesExceeded").setDebugId(482));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		}


		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition2", "FLAGS:NI", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(475)).evaluate(mySession)) {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("FLAGS:NI", "CONSTANTS:FALSE", false).setDebugId(476));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition3", "inputVariables:moreOptionFlag", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(1856)).evaluate(mySession)) {
				actions = new java.util.ArrayList(2);
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONNOINPUTREPROMPT", "COLLECTIONINITIALREPROMPT", "*", false).setDebugId(1858));
				actions.add(new com.avaya.sce.runtime.Next("AssignGrammars", "More Option No input Reprompt").setDebugId(1859));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;

			}


			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition4", "inputVariables:NINMCounter", com.avaya.sce.runtime.Expression.IS_TRUE).setDebugId(495)).evaluate(mySession)) {

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition5", "inputVariables:rePromptNoMatch", com.avaya.sce.runtime.Expression.STRING_NOT_EQUAL_IGNORE, "CONSTANTS:NONE", true).setDebugId(496)).evaluate(mySession)) {

					if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition6", "IDM_Variables:firstnomatchrepromptattempt", com.avaya.sce.runtime.Expression.IS_FALSE).setDebugId(497)).evaluate(mySession)) {
						actions = new java.util.ArrayList(5);
						actions.add(new com.avaya.sce.runtime.varoperations.Assign("IDM_Variables:firstnomatchrepromptattempt", "CONSTANTS:TRUE", false).setDebugId(498));
						actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONNOMATCHREPROMPT", "inputVariables:rePromptNoMatch", "|", false).setDebugId(499));
						actions.add(new com.avaya.sce.runtime.varoperations.ResetCollection("COLLECTIONNOMATCHREPROMPT").setDebugId(500));
						actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOMATCHREPROMPT").setDebugId(501));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoMatch Reprompt : ", "COLLECTIONNOMATCHREPROMPT").setDebugId(502));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;

					} else {

						if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition7", "COLLECTIONNOMATCHREPROMPT", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(504)).evaluate(mySession)) {
							actions = new java.util.ArrayList(2);
							actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOMATCHREPROMPT").setDebugId(505));
							actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoMatch Reprompt : ", "COLLECTIONNOMATCHREPROMPT").setDebugId(506));
							if(evaluateActions(actions, mySession)) {
								return true;
							}
							actions = null;

						}
					}


				}

			}


			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition8", "inputVariables:rePromptNoInput", com.avaya.sce.runtime.Expression.STRING_NOT_EQUAL_IGNORE, "CONSTANTS:NONE", true).setDebugId(507)).evaluate(mySession)) {

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition9", "IDM_Variables:firstnoinputrepromptattempt", com.avaya.sce.runtime.Expression.IS_FALSE).setDebugId(508)).evaluate(mySession)) {
					actions = new java.util.ArrayList(8);
					actions.add(new com.avaya.sce.runtime.varoperations.Assign("IDM_Variables:firstnoinputrepromptattempt", "CONSTANTS:TRUE", false).setDebugId(509));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONNOINPUTREPROMPT", "inputVariables:rePromptNoInput", "|", false).setDebugId(510));
					actions.add(new com.avaya.sce.runtime.varoperations.ResetCollection("COLLECTIONNOINPUTREPROMPT").setDebugId(511));
					actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOINPUTREPROMPT").setDebugId(512));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoInput Reprompt : ", "COLLECTIONNOINPUTREPROMPT").setDebugId(513));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONNOINPUTREPROMPT", "*", false).setDebugId(581));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONNOINPUTREPROMPT", "*", false).setDebugId(2237));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection Initial Prompt", "COLLECTIONINITIALPROMPT").setDebugId(582));
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;

				} else {

					if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition10", "COLLECTIONNOINPUTREPROMPT", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(515)).evaluate(mySession)) {
						actions = new java.util.ArrayList(4);
						actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOINPUTREPROMPT").setDebugId(516));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoInput Reprompt : ", "COLLECTIONNOINPUTREPROMPT").setDebugId(517));
						actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONNOINPUTREPROMPT", "*", false).setDebugId(518));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoInput Reprompt : ", "COLLECTIONINITIALPROMPT").setDebugId(519));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;

					}

					actions = new java.util.ArrayList(3);
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONNOINPUTREPROMPT", "*", false).setDebugId(520));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONNOINPUTREPROMPT", "*", false).setDebugId(2238));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoInput Reprompt : ", "COLLECTIONINITIALPROMPT").setDebugId(521));
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;
				}


			} else {
				actions = new java.util.ArrayList(1);
				actions.add(new com.avaya.sce.runtime.varoperations.EmptyCollection("COLLECTIONINITIALPROMPT").setDebugId(523));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;
			}


			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.Next("AssignGrammars", "NoInputReprompt").setDebugId(468));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		}


		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition11", "FLAGS:NM", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(477)).evaluate(mySession)) {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("FLAGS:NM", "CONSTANTS:FALSE", false).setDebugId(478));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition12", "inputVariables:moreOptionFlag", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(1860)).evaluate(mySession)) {
				actions = new java.util.ArrayList(2);
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONNOMATCHREPROMPT", "COLLECTIONINITIALREPROMPT", "*", false).setDebugId(1861));
				actions.add(new com.avaya.sce.runtime.Next("AssignGrammars", "More Option No match Reprompt").setDebugId(1862));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;

			}


			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition13", "inputVariables:NINMCounter", com.avaya.sce.runtime.Expression.IS_TRUE).setDebugId(524)).evaluate(mySession)) {

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition14", "inputVariables:rePromptNoInput", com.avaya.sce.runtime.Expression.STRING_NOT_EQUAL_IGNORE, "CONSTANTS:NONE", true).setDebugId(525)).evaluate(mySession)) {

					if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition15", "IDM_Variables:firstnoinputrepromptattempt", com.avaya.sce.runtime.Expression.IS_FALSE).setDebugId(526)).evaluate(mySession)) {
						actions = new java.util.ArrayList(5);
						actions.add(new com.avaya.sce.runtime.varoperations.Assign("IDM_Variables:firstnoinputrepromptattempt", "CONSTANTS:TRUE", false).setDebugId(527));
						actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONNOINPUTREPROMPT", "inputVariables:rePromptNoMatch", "|", false).setDebugId(528));
						actions.add(new com.avaya.sce.runtime.varoperations.ResetCollection("COLLECTIONNOINPUTREPROMPT").setDebugId(529));
						actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOINPUTREPROMPT").setDebugId(530));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoInput Reprompt : ", "COLLECTIONNOINPUTREPROMPT").setDebugId(531));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;

					} else {

						if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition16", "COLLECTIONNOINPUTREPROMPT", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(533)).evaluate(mySession)) {
							actions = new java.util.ArrayList(2);
							actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOINPUTREPROMPT").setDebugId(534));
							actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection  Reprompt : ", "COLLECTIONNOINPUTREPROMPT").setDebugId(535));
							if(evaluateActions(actions, mySession)) {
								return true;
							}
							actions = null;

						}
					}


				}

			}


			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition17", "inputVariables:rePromptNoMatch", com.avaya.sce.runtime.Expression.STRING_NOT_EQUAL_IGNORE, "CONSTANTS:NONE", true).setDebugId(536)).evaluate(mySession)) {

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition18", "IDM_Variables:firstnomatchrepromptattempt", com.avaya.sce.runtime.Expression.IS_FALSE).setDebugId(537)).evaluate(mySession)) {
					actions = new java.util.ArrayList(8);
					actions.add(new com.avaya.sce.runtime.varoperations.Assign("IDM_Variables:firstnomatchrepromptattempt", "CONSTANTS:TRUE", false).setDebugId(538));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONNOMATCHREPROMPT", "inputVariables:rePromptNoMatch", "|", false).setDebugId(539));
					actions.add(new com.avaya.sce.runtime.varoperations.ResetCollection("COLLECTIONNOMATCHREPROMPT").setDebugId(540));
					actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOMATCHREPROMPT").setDebugId(541));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoMatch Reprompt : ", "COLLECTIONNOMATCHREPROMPT").setDebugId(542));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONNOMATCHREPROMPT", "*", false).setDebugId(585));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONNOMATCHREPROMPT", "*", false).setDebugId(2239));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection Initial Prompt", "COLLECTIONINITIALPROMPT").setDebugId(586));
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;

				} else {

					if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition19", "COLLECTIONNOMATCHREPROMPT", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(544)).evaluate(mySession)) {
						actions = new java.util.ArrayList(4);
						actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONNOMATCHREPROMPT").setDebugId(545));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoInput Reprompt : ", "COLLECTIONNOMATCHREPROMPT").setDebugId(546));
						actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONNOMATCHREPROMPT", "*", false).setDebugId(547));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoInput Reprompt : ", "COLLECTIONINITIALPROMPT").setDebugId(548));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;

					}

					actions = new java.util.ArrayList(3);
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONNOMATCHREPROMPT", "*", false).setDebugId(549));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONNOMATCHREPROMPT", "*", false).setDebugId(2241));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection NoMatch Reprompt : ", "COLLECTIONINITIALPROMPT").setDebugId(550));
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;
				}


			} else {
				actions = new java.util.ArrayList(1);
				actions.add(new com.avaya.sce.runtime.varoperations.EmptyCollection("COLLECTIONINITIALPROMPT").setDebugId(552));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;
			}


			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.Next("AssignGrammars", "NoMatchReprompt").setDebugId(481));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		}


		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition20", "FLAGS:UniqueConsCounterFlag", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(1343)).evaluate(mySession)) {
			actions = new java.util.ArrayList(3);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("FLAGS:UniqueConsCounterFlag", "CONSTANTS:FALSE", false).setDebugId(1345));
			actions.add(new com.avaya.sce.runtime.varoperations.EmptyCollection("COLLECTIONINITIALPROMPT").setDebugId(1349));
			actions.add(new com.avaya.sce.runtime.Next("AssignGrammars", "ConstraintRepromptNomatch").setDebugId(1344));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		}

		// return false if the evaluation of actions did not cause a servlet forward or redirect
		return false;
	}
}
