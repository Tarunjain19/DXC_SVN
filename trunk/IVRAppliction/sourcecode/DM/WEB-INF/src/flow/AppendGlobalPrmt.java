package flow;

import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.SCESession;
import com.dm.util.Constants;

/**
 * The Data class handles many types of server-side operations including data
 * collection (from a data sources such as a database, or web service), variable
 * assignments and operations (like copying variable values, performing mathematic
 * operations, and collection iteration), conditional evaluation to control callflow
 * execution based on variable values, and logging/tracing statements.
 * 
 * Items created in the getDataActions() method are executed/evaluated in order
 * and if a condional branch condition evaluates to "true" then the branch is
 * activated and the execution of data actions is halted.  If no "true" conditions
 * are encountered, then all data actions will be executed/evaluated and the 
 * application will proceed to the "Default" servlet.
 * Last generated by Orchestration Designer at: 2015-APR-18  01:07:23 PM
 */
public class AppendGlobalPrmt extends com.avaya.sce.runtime.Data {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2015-APR-18  01:07:23 PM
	 */
	public AppendGlobalPrmt() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	
	@Override
	public void requestBegin(SCESession mySession) {
		// Global Prompt to be appended to the initial prompt
		String globalCount = mySession.getVariableField(IProjectVariables.IDM__VARIABLES,IProjectVariables.IDM__VARIABLES_FIELD_GLOBAL_COUNT).getStringValue();
		String globalPrmt = mySession.getVariableField(IProjectVariables.INPUT_VARIABLES,IProjectVariables.INPUT_VARIABLES_FIELD_GLOBAL_PROMPT).getStringValue();
		String manageRepeat = mySession.getVariableField(IProjectVariables.INPUT_VARIABLES,IProjectVariables.INPUT_VARIABLES_FIELD_MANAGE_REPEAT).getStringValue();
		String value = mySession.getVariableField(IProjectVariables.PROMPT_AND_COLLECT,IProjectVariables.PROMPT_AND_COLLECT_FIELD_VALUE).getStringValue();
		String moreOptionFlag = mySession.getVariableField(IProjectVariables.INPUT_VARIABLES,IProjectVariables.INPUT_VARIABLES_FIELD_MORE_OPTION_FLAG).getStringValue();
		String[] globalPrmtToAppend = null;
		if (mySession.isAppTraceEnabled() == true){mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "Global Count: " + globalCount);}
		if (mySession.isAppTraceEnabled() == true){mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "Global Prompt: " + globalPrmt);}

		if(!globalPrmt.equalsIgnoreCase(Constants.NONE) && !value.equalsIgnoreCase(Constants.REPEAT)){
			if(globalPrmt.contains(Constants.PIPESEPERATOR)){
				globalPrmtToAppend = globalPrmt.split("\\|");
				if (mySession.isAppTraceEnabled() == true){mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "If: " + globalPrmtToAppend[Integer.parseInt(globalCount)]);}
				mySession.getVariable(IProjectVariables.GLOBAL_PRMT_COLLECTION).getSimpleVariable().setValue(globalPrmtToAppend[Integer.parseInt(globalCount)]);
			}else{
				if (mySession.isAppTraceEnabled() == true){mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "Inside Else: " + globalPrmt);}
				mySession.getVariable(IProjectVariables.GLOBAL_PRMT_COLLECTION).getSimpleVariable().setValue(globalPrmt);
			}	
		}
		
	}
	/**
	 * Returns the Next item which will forward application execution
	 * to the next form in the call flow.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:34 PM
	 */
	public com.avaya.sce.runtime.Next getNext(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Next next = new com.avaya.sce.runtime.Next("PromptAndCollect", "Default");
		next.setDebugId(2084);
		return next;
	}
	/**
	 * Create a list of local variables used by items in the data node.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:34 PM
	 */
	public java.util.Collection<VariableInfo> getLocalVariables(){
		java.util.Collection<VariableInfo> variables = new java.util.ArrayList<VariableInfo>();

		return variables;
	}
	/**
	 * Creates and conditionally executes operations that have been configured
	 * in the Callflow.  This method will build a collection of operations and
	 * have the framework execute the operations by calling evaluateActions().
	 * If the evaluation causes the framework to forward to a different servlet
	 * then execution stops.
	 * Returning true from this method means that the framework has forwarded the
	 * request to a different servlet.  Returning false means that the default
	 * Next will be invoked.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:34 PM
	 */
	public boolean executeDataActions(com.avaya.sce.runtimecommon.SCESession mySession) throws Exception {
		java.util.Collection actions = null;

		actions = new java.util.ArrayList(1);
		com.avaya.sce.runtime.BooleanOperation bo1 = new com.avaya.sce.runtime.BooleanOperation(com.avaya.sce.runtime.BooleanOperation.AND);
		com.avaya.sce.runtime.Expression be1 = new com.avaya.sce.runtime.Expression("expression1", "globalPrmtCollection", com.avaya.sce.runtime.Expression.STRING_NOT_EQUAL_IGNORE, "CONSTANTS:NONE", true);
		bo1.addExpression(be1);
		com.avaya.sce.runtime.Expression be2 = new com.avaya.sce.runtime.Expression("expression2", "PromptAndCollect:value", com.avaya.sce.runtime.Expression.STRING_NOT_EQUAL_IGNORE, "REPEAT", false);
		bo1.addExpression(be2);
		if(evaluateActions(actions, mySession)) {
			return true;
		}
		actions = null;

		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition").setDebugId(2105)).evaluate(mySession, bo1)) {
			actions = new java.util.ArrayList(3);
			actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Collection Initial Prompt", "COLLECTIONINITIALPROMPT").setDebugId(2195));
			actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "First Phrase in initial Prompt", "COLLECTIONINITIALPROMPT").setDebugId(2215));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition1", "inputVariables:moreOptionFlag", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(2261)).evaluate(mySession)) {

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition2", "COLLECTIONMOREINITIALPRMTTEMP", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(2263)).evaluate(mySession)) {
					actions = new java.util.ArrayList(1);
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;

					for(com.avaya.sce.runtime.VarCollIterator varCollIterator0=(com.avaya.sce.runtime.VarCollIterator)new com.avaya.sce.runtime.VarCollIterator().setDebugId(2264);varCollIterator0.hasNext(mySession, "COLLECTIONMOREINITIALPRMTTEMP");varCollIterator0.next()){
						actions = new java.util.ArrayList(3);
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "COLLECTIONMOREINITIALPRMTTEMP", false).setDebugId(2265));
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "ASTERICK", false).setDebugId(2266));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Temp Collection : ", "COLLECTIONINITIALPROMPT").setDebugId(2267));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;
					}


				} else {
					actions = new java.util.ArrayList(2);
					actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "COLLECTIONMOREINITIALPRMTTEMP", false).setDebugId(2285));
					actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "ASTERICK", false).setDebugId(2286));
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;
				}


				actions = new java.util.ArrayList(2);
				actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "globalPrmtCollection", false).setDebugId(2268));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "First Phrase in more initial Prompt", "COLLECTIONINITIALREPROMPT").setDebugId(2269));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition3", "COLLECTIONMOREINITIALPRMTTEMP", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(2270)).evaluate(mySession)) {
					actions = new java.util.ArrayList(1);
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;

					for(com.avaya.sce.runtime.VarCollIterator varCollIterator1=(com.avaya.sce.runtime.VarCollIterator)new com.avaya.sce.runtime.VarCollIterator().setDebugId(2271);varCollIterator1.hasNext(mySession, "COLLECTIONMOREINITIALPRMTTEMP");varCollIterator1.next()){
						actions = new java.util.ArrayList(3);
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALREPROMPTTEMP", "COLLECTIONMOREINITIALPRMTTEMP", false).setDebugId(2272));
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALREPROMPTTEMP", "ASTERICK", false).setDebugId(2273));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Temp Collection : ", "COLLECTIONINITIALPROMPT").setDebugId(2274));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;
					}


				}

				actions = new java.util.ArrayList(6);
				actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALREPROMPTTEMP", "globalPrmtCollection", false).setDebugId(2275));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Global Prmt Collection", "COLLECTIONGLOBALINITIALTEMP").setDebugId(2276));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONGLOBALINITIALTEMP", "*", false).setDebugId(2277));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONGLOBALREPROMPTTEMP", "*", false).setDebugId(2278));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Reprompt", "COLLECTIONINITIALPROMPT").setDebugId(2279));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Prompt", "COLLECTIONGLOBALINITIALTEMP").setDebugId(2280));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;

			} else {

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition4", "COLLECTIONINITIALPROMPT", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(2205)).evaluate(mySession)) {
					actions = new java.util.ArrayList(1);
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;

					for(com.avaya.sce.runtime.VarCollIterator varCollIterator2=(com.avaya.sce.runtime.VarCollIterator)new com.avaya.sce.runtime.VarCollIterator().setDebugId(2207);varCollIterator2.hasNext(mySession, "COLLECTIONINITIALPROMPT");varCollIterator2.next()){
						actions = new java.util.ArrayList(3);
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "COLLECTIONINITIALPROMPT", false).setDebugId(2206));
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "ASTERICK", false).setDebugId(2231));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Temp Collection : ", "COLLECTIONINITIALPROMPT").setDebugId(2208));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;
					}


				} else {
					actions = new java.util.ArrayList(2);
					actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "COLLECTIONINITIALPROMPT", false).setDebugId(2288));
					actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "ASTERICK", false).setDebugId(2289));
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;
				}


				actions = new java.util.ArrayList(2);
				actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALINITIALTEMP", "globalPrmtCollection", false).setDebugId(2244));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "First Phrase in more initial Prompt", "COLLECTIONINITIALREPROMPT").setDebugId(2217));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition5", "COLLECTIONINITIALREPROMPT", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(2211)).evaluate(mySession)) {
					actions = new java.util.ArrayList(1);
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;

					for(com.avaya.sce.runtime.VarCollIterator varCollIterator3=(com.avaya.sce.runtime.VarCollIterator)new com.avaya.sce.runtime.VarCollIterator().setDebugId(2212);varCollIterator3.hasNext(mySession, "COLLECTIONINITIALREPROMPT");varCollIterator3.next()){
						actions = new java.util.ArrayList(3);
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALREPROMPTTEMP", "COLLECTIONINITIALREPROMPT", false).setDebugId(2214));
						actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALREPROMPTTEMP", "ASTERICK", false).setDebugId(2230));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Temp Collection : ", "COLLECTIONINITIALPROMPT").setDebugId(2213));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;
					}


				}

				actions = new java.util.ArrayList(6);
				actions.add(new com.avaya.sce.runtime.varoperations.Concatenate("COLLECTIONGLOBALREPROMPTTEMP", "globalPrmtCollection", false).setDebugId(2177));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Global Prmt Collection", "COLLECTIONGLOBALINITIALTEMP").setDebugId(2168));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONGLOBALINITIALTEMP", "*", false).setDebugId(2166));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONGLOBALREPROMPTTEMP", "*", false).setDebugId(2178));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Reprompt", "COLLECTIONINITIALPROMPT").setDebugId(2095));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Prompt", "COLLECTIONGLOBALINITIALTEMP").setDebugId(2219));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;
			}


			actions = new java.util.ArrayList(2);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("COLLECTIONGLOBALINITIALTEMP", "", true).setDebugId(2242));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("COLLECTIONGLOBALREPROMPTTEMP", "", true).setDebugId(2243));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		}

		// return false if the evaluation of actions did not cause a servlet forward or redirect
		return false;
	}
}
