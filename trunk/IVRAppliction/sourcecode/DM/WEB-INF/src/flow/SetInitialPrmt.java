package flow;

/**
 * The Data class handles many types of server-side operations including data
 * collection (from a data sources such as a database, or web service), variable
 * assignments and operations (like copying variable values, performing mathematic
 * operations, and collection iteration), conditional evaluation to control callflow
 * execution based on variable values, and logging/tracing statements.
 * 
 * Items created in the getDataActions() method are executed/evaluated in order
 * and if a condional branch condition evaluates to "true" then the branch is
 * activated and the execution of data actions is halted.  If no "true" conditions
 * are encountered, then all data actions will be executed/evaluated and the 
 * application will proceed to the "Default" servlet.
 * Last generated by Orchestration Designer at: 2014-JAN-24  08:52:16 PM
 */
public class SetInitialPrmt extends com.avaya.sce.runtime.Data {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2014-JAN-24  08:52:16 PM
	 */
	public SetInitialPrmt() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * Returns the Next item which will forward application execution
	 * to the next form in the call flow.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:33 PM
	 */
	public com.avaya.sce.runtime.Next getNext(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Next next = new com.avaya.sce.runtime.Next("IsConstraintListAvailable", "DigitsCollection");
		next.setDebugId(1832);
		return next;
	}
	/**
	 * Create a list of local variables used by items in the data node.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:33 PM
	 */
	public java.util.Collection<VariableInfo> getLocalVariables(){
		java.util.Collection<VariableInfo> variables = new java.util.ArrayList<VariableInfo>();

		return variables;
	}
	/**
	 * Creates and conditionally executes operations that have been configured
	 * in the Callflow.  This method will build a collection of operations and
	 * have the framework execute the operations by calling evaluateActions().
	 * If the evaluation causes the framework to forward to a different servlet
	 * then execution stops.
	 * Returning true from this method means that the framework has forwarded the
	 * request to a different servlet.  Returning false means that the default
	 * Next will be invoked.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2017-SEP-04  04:23:33 PM
	 */
	public boolean executeDataActions(com.avaya.sce.runtimecommon.SCESession mySession) throws Exception {
		java.util.Collection actions = null;

		actions = new java.util.ArrayList(1);
		if(evaluateActions(actions, mySession)) {
			return true;
		}
		actions = null;

		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition1", "inputVariables:initialPrompt", com.avaya.sce.runtime.Expression.STRING_NOT_EQUAL_IGNORE, "CONSTANTS:NONE", true).setDebugId(1801)).evaluate(mySession)) {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "First Initial Attempt :", "IDM_Variables:firstinitialattempt").setDebugId(1802));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

			if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition2", "IDM_Variables:firstinitialattempt", com.avaya.sce.runtime.Expression.IS_FALSE).setDebugId(1803)).evaluate(mySession)) {
				actions = new java.util.ArrayList(15);
				actions.add(new com.avaya.sce.runtime.varoperations.Increment("IDM_Variables:moreOptionCount").setDebugId(1804));
				actions.add(new com.avaya.sce.runtime.varoperations.Assign("IDM_Variables:firstinitialattempt", "CONSTANTS:TRUE", false).setDebugId(1805));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPTTEMP", "inputVariables:initialPrompt", "|", false).setDebugId(1806));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Prompt : ", "COLLECTIONINITIALPROMPTTEMP").setDebugId(1807));
				actions.add(new com.avaya.sce.runtime.varoperations.ResetCollection("COLLECTIONINITIALPROMPTTEMP").setDebugId(1808));
				actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONINITIALPROMPTTEMP").setDebugId(1809));
				actions.add(new com.avaya.sce.runtime.varoperations.Size("CollectionSize", "COLLECTIONINITIALPROMPTTEMP").setDebugId(1810));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Size of Collection : ", "CollectionSize").setDebugId(1811));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Prompt : ", "COLLECTIONINITIALPROMPTTEMP").setDebugId(1812));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(1813));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(1852));
				actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONMOREINITIALPRMTTEMP", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(2188));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Prompt", "COLLECTIONINITIALPROMPT").setDebugId(2196));
				actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "More Initial Prompt", "COLLECTIONINITIALREPROMPT").setDebugId(2197));
				actions.add(new com.avaya.sce.runtime.Next("IsConstraintListAvailable", "First Initial").setDebugId(1814));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;

			} else {

				if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition3", "inputVariables:moreOptionFlag", com.avaya.sce.runtime.Expression.STRING_EQUAL_IGNORE, "CONSTANTS:TRUE", true).setDebugId(1816)).evaluate(mySession)) {

					if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition4", "COLLECTIONINITIALPROMPTTEMP", com.avaya.sce.runtime.Expression.HAS_MORE).setDebugId(1817)).evaluate(mySession)) {
						actions = new java.util.ArrayList(9);
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;

						for(com.avaya.sce.runtime.VarCollIterator varCollIterator0=(com.avaya.sce.runtime.VarCollIterator)new com.avaya.sce.runtime.VarCollIterator().setDebugId(1818);varCollIterator0.hasNext(mySession, "COLLECTIONINITIALPROMPTTEMP");varCollIterator0.next()){
							actions = new java.util.ArrayList(1);
							actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Temp Collection : ", "COLLECTIONINITIALPROMPTTEMP").setDebugId(1819));
							if(evaluateActions(actions, mySession)) {
								return true;
							}
							actions = null;
						}


						actions = new java.util.ArrayList(8);
						actions.add(new com.avaya.sce.runtime.varoperations.Increment("IDM_Variables:moreOptionCount").setDebugId(1820));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "First Inital Attempt : ", "IDM_Variables:firstinitialattempt").setDebugId(1821));
						actions.add(new com.avaya.sce.runtime.varoperations.NextInCollection("COLLECTIONINITIALPROMPTTEMP").setDebugId(1822));
						actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(1824));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Inital Prompt Collection  : ", "COLLECTIONINITIALPROMPTTEMP").setDebugId(1823));
						actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONMOREINITIALPRMTTEMP", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(2184));
						actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "More Inital Prompt Collection  : ", "COLLECTIONMOREINITIALPRMTTEMP").setDebugId(2186));
						actions.add(new com.avaya.sce.runtime.Next("IsConstraintListAvailable", "Initial_HasMore").setDebugId(1825));
						if(evaluateActions(actions, mySession)) {
							return true;
						}
						actions = null;

					}

					actions = new java.util.ArrayList(6);
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALPROMPT", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(1826));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONINITIALREPROMPT", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(1853));
					actions.add(new com.avaya.sce.runtime.varoperations.Parse("COLLECTIONMOREINITIALPRMTTEMP", "COLLECTIONINITIALPROMPTTEMP", "*", false).setDebugId(2185));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Initial Prompt Collection  : ", "COLLECTIONINITIALPROMPT").setDebugId(1827));
					actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "More Inital Prompt Collection  : ", "COLLECTIONMOREINITIALPRMTTEMP").setDebugId(2187));
					actions.add(new com.avaya.sce.runtime.Next("IsConstraintListAvailable", "Has No More").setDebugId(1828));
					if(evaluateActions(actions, mySession)) {
						return true;
					}
					actions = null;

				}

				actions = new java.util.ArrayList(1);
				actions.add(new com.avaya.sce.runtime.Next("IsConstraintListAvailable", "No more option").setDebugId(1829));
				if(evaluateActions(actions, mySession)) {
					return true;
				}
				actions = null;
			}


		} else {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("COLLECTIONINITIALPROMPT", "CONSTANTS:NONE", false).setDebugId(1831));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;
		}


		// return false if the evaluation of actions did not cause a servlet forward or redirect
		return false;
	}
}
