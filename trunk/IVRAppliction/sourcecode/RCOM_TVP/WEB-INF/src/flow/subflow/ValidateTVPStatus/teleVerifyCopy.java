package flow.subflow.ValidateTVPStatus;

import java.text.SimpleDateFormat;

import org.apache.log4j.Logger;

import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.SCESession;
import com.hp.utilities.IVRConstants;
import com.hp.utilities.TVP_Properties;
import com.hp.utilities.TVP_Utilities;
import com.servion.rcom.hostinterface.util.Utilities;
import com.servion.rcom.hostinterface.view.ReqTeleVerify;
import com.servion.rcom.hostinterface.view.ResTeleVerify;
import com.servion.rcom.hostinterface.wrapper.IVRWebService;
import com.servion.rcom.hostinterface.wrapper.IVRWebServiceImpl;
import com.servion.util.IVRDataBean;

import flow.IProjectVariables;

/**
 * The Data class handles many types of server-side operations including data
 * collection (from a data sources such as a database, or web service), variable
 * assignments and operations (like copying variable values, performing mathematic
 * operations, and collection iteration), conditional evaluation to control callflow
 * execution based on variable values, and logging/tracing statements.
 * 
 * Items created in the getDataActions() method are executed/evaluated in order
 * and if a condional branch condition evaluates to "true" then the branch is
 * activated and the execution of data actions is halted.  If no "true" conditions
 * are encountered, then all data actions will be executed/evaluated and the 
 * application will proceed to the "Default" servlet.
 * Last generated by Orchestration Designer at: 2015-OCT-24  02:00:33 PM
 */
public class teleVerifyCopy extends com.avaya.sce.runtime.Data {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	
	@Override
	public void requestBegin(SCESession mySession) {
		ITraceInfo itraceInfo = null;
		TVP_Properties tvpProp=null;
   System.out.println("HHHHHHHHHHHHHH");

		  try
		    {
		IVRDataBean ivrDataBean = new IVRDataBean();
	    ReqTeleVerify req= new ReqTeleVerify();
	    IVRWebService ivrWebService = new IVRWebServiceImpl(); 
	  //  Logger logger;
	    itraceInfo = mySession.getTraceOutput();
	    tvpProp = TVP_Properties.getInstance((mySession.getVariableField(IProjectVariables.VAR__CONFIG,IProjectVariables.VAR__CONFIG_FIELD_CONFIG_FILE_PATH).getStringValue()),mySession);	
	    Utilities uti=new Utilities();
	    TVP_Utilities tvpUti=new TVP_Utilities();
	    
	    String format = tvpProp.getProperty(mySession, IVRConstants.DATE_FORMAT);
	    System.out.println(format);
	/*Creating request */  
		String requestID=Utilities.generateUniqueID();
	    String mdn=mySession.getVariableField(IProjectVariables.CALL_INFO, IProjectVariables.CALL_INFO_FIELD_TVP_MDN).getStringValue();
	    String languageID=mySession.getVariableField(IProjectVariables.CALL_INFO,IProjectVariables.CALL_INFO_FIELD_CURRENT_LANGUAGE).getStringValue();
	    String requestType=tvpProp.getProperty(mySession, IVRConstants.CHECK_TVP);//"TVP_STATUS";
	    System.out.println(requestType);
	    String source=tvpProp.getProperty(mySession, IVRConstants.SOURCE);
	    String date=tvpUti.getCurrentDate(format);
	    req.setRequestId(requestID);
	    req.setLangId(languageID);
	    req.setMDN(mdn);
	    req.setREQUESTTYPE(requestType);
	    req.setSOURCE(source);
	    req.setREQUESTDATE(date);
	    itraceInfo.writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "Request for TVP status" + req.toString());
	/*For testing */    
		ResTeleVerify resTeleVerify = ivrWebService.executeTeleVerifyRequest(ivrDataBean, req);
	   /*  ResTeleVerify resTeleVerify =new ResTeleVerify();
	        resTeleVerify.setCUSTOMER_CATEGORY("A");
	        resTeleVerify.setCUSTOMER_TYPE("SME");
	        resTeleVerify.setDATA_CONSENT("Y");
	        resTeleVerify.setCUSTOMER_CATEGORY("24/04/1988");
	        resTeleVerify.setOUT_MSG("Success");
	        resTeleVerify.setOUT_STATUS("Success");
	        resTeleVerify.setOUT_STATUS_CODE("0");
	        resTeleVerify.setPOA_ID_DETAILS("MH1111");
	        resTeleVerify.setTVP_STATUS("TV_NEGATIVE");
	        resTeleVerify.setPOA_ISSUE_DATE("24/04/1988");
	        resTeleVerify.setPOA_TYPE("Driving Licence");
	        resTeleVerify.setPRODUCT_TYPE("DONGLE");
	        resTeleVerify.setResponseCode("0");
	        resTeleVerify.setSERVICE_TYPE("PREPAID");
	        resTeleVerify.setTECHNOLOGY_TYPE("CDMA");
	        resTeleVerify.setUPDATE_DATE("05/11/2015 10:03:45");
	       */
	        //Changing formate of POA date to DDMMYYY 
	         
			String strDate;
			strDate = resTeleVerify.getPOA_ISSUE_DATE();
			System.out.println(strDate);
		    strDate=strDate.replaceAll("[/]", "");
	        System.out.println(strDate);
	        System.out.println("ABCD");
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_CUSTOMER_CATEGORY).setValue(resTeleVerify.getCUSTOMER_CATEGORY());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_CUSTOMER_TYPE).setValue(resTeleVerify.getCUSTOMER_TYPE());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_DATA_CONSCENT).setValue(resTeleVerify.getDATA_CONSENT());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_DOB).setValue(resTeleVerify.getDOB());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_OUT_MSG).setValue(resTeleVerify.getOUT_MSG());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_OUT_STATUS).setValue(resTeleVerify.getOUT_STATUS());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_OUT_STATUS_CODE).setValue(resTeleVerify.getOUT_STATUS_CODE());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_POAID_DETAILS).setValue(resTeleVerify.getPOA_ID_DETAILS());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_POAISSUE_DATE).setValue(strDate);
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_POATYPE).setValue(resTeleVerify.getPOA_TYPE());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_PRODUCT_TYPE).setValue(resTeleVerify.getPRODUCT_TYPE());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_RESPONSE_CODE).setValue(resTeleVerify.getResponseCode());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_SERVICE_TYPE).setValue(resTeleVerify.getSERVICE_TYPE());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_TECHNOLOGY_TYPE).setValue(resTeleVerify.getTECHNOLOGY_TYPE());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_TVP_STATUS).setValue(resTeleVerify.getTVP_STATUS());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_UPDATE_DATE).setValue(resTeleVerify.getUPDATE_DATE());
			mySession.getVariableField(IProjectVariables.TIBCO__VALIDATION__RES,IProjectVariables.TIBCO__VALIDATION__RES_FIELD_PRODUCT_TYPE).setValue(resTeleVerify.getPRODUCT_TYPE());
			
						if(resTeleVerify!=null)
						{
							mySession.getVariableField(IProjectVariables.TVP__VARS, IProjectVariables.TVP__VARS_FIELD_NO__DATA).setValue(false);
						    String thanksMsg=tvpProp.getProperty(mySession,(IVRConstants.TRANSFER+resTeleVerify.getPRODUCT_TYPE()));
							mySession.getVariableField(IProjectVariables.CALL_INFO,IProjectVariables.CALL_INFO_FIELD_ANN__TRANSFER).setValue(thanksMsg);
						}
						
						else
						
							mySession.getVariableField(IProjectVariables.TVP__VARS, IProjectVariables.TVP__VARS_FIELD_NO__DATA).setValue(true);

						//Setting success java execute signal to OD code
						mySession.getVariableField(IProjectVariables.TVP__VARS, IProjectVariables.TVP__VARS_FIELD_JAVA__ERROR).setValue(false);
						itraceInfo.writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "# Televerify.java Java_Error is set to: " + false );
	
			
	    }
	    catch(Exception e)
	    {
	    	//Setting failure java execute signal to OD code
			mySession.getVariableField(IProjectVariables.TVP__VARS, IProjectVariables.TVP__VARS_FIELD_JAVA__ERROR).setValue(true);
			itraceInfo.writeln(ITraceInfo.TRACE_LEVEL_ERROR, "# Televerify.java Java_Error is set to: " + e );
			itraceInfo.writeln(ITraceInfo.TRACE_LEVEL_ERROR, "# ERROR: Exception - Televerify.java:- " + e);
			System.out.println("Exception"+e);
			
		    }
	}

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2015-OCT-24  02:00:33 PM
	 */
	public teleVerifyCopy() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * Returns the Next item which will forward application execution
	 * to the next form in the call flow.
	 * Last generated by Orchestration Designer at: 2015-NOV-07  06:04:59 PM
	 */
	public com.avaya.sce.runtime.Next getNext(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Next next = null;
		return next;
	}
	/**
	 * Create a list of local variables used by items in the data node.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2015-NOV-07  06:04:59 PM
	 */
	public java.util.Collection<VariableInfo> getLocalVariables(){
		java.util.Collection<VariableInfo> variables = new java.util.ArrayList<VariableInfo>();

		return variables;
	}
	/**
	 * Creates and conditionally executes operations that have been configured
	 * in the Callflow.  This method will build a collection of operations and
	 * have the framework execute the operations by calling evaluateActions().
	 * If the evaluation causes the framework to forward to a different servlet
	 * then execution stops.
	 * Returning true from this method means that the framework has forwarded the
	 * request to a different servlet.  Returning false means that the default
	 * Next will be invoked.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2015-NOV-07  06:04:59 PM
	 */
	public boolean executeDataActions(com.avaya.sce.runtimecommon.SCESession mySession) throws Exception {
		java.util.Collection actions = null;

		actions = new java.util.ArrayList(2);
		actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "Entering Tibco Code", "").setDebugId(38));
		if(evaluateActions(actions, mySession)) {
			return true;
		}
		actions = null;

		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition1", "TVP_VARs:Java_Error", com.avaya.sce.runtime.Expression.IS_TRUE).setDebugId(39)).evaluate(mySession)) {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.Next("ValidateTVPStatus-Transfer", "errorTrans").setDebugId(40));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		} else if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition2", "TVP_VARs:NO_DATA", com.avaya.sce.runtime.Expression.IS_TRUE).setDebugId(41)).evaluate(mySession)) {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.Next("ValidateTVPStatus-PhoneGen_check", "check_Phonegen").setDebugId(42));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		} else {
			actions = new java.util.ArrayList(1);
			actions.add(new com.avaya.sce.runtime.Next("ValidateTVPStatus-checkTech", "checkTechnology").setDebugId(44));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;
		}


		// return false if the evaluation of actions did not cause a servlet forward or redirect
		return false;
	}
}
