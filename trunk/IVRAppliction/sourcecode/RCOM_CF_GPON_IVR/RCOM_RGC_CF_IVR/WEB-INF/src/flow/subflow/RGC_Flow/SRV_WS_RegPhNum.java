package flow.subflow.RGC_Flow;

import java.io.PrintWriter;
import java.io.StringWriter;

import javax.xml.rpc.holders.StringHolder;

import org.tempuri.RGC_ServicesSoapProxy;

import com.avaya.sce.runtime.tracking.TraceInfo;
import com.avaya.sce.runtimecommon.ITraceInfo;
import com.hpe.util.AppConstant;
import com.hpe.util.XMLParser;

import flow.IProjectVariables;

/**
 * A basic servlet which allows a user to define their code, generate
 * any output, and to select where to transition to next.
 * Last generated by Orchestration Designer at: 2016-JUN-10  11:42:02 AM
 */
public class SRV_WS_RegPhNum extends com.avaya.sce.runtime.BasicServlet {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2016-JUN-10  11:42:02 AM
	 */
	public SRV_WS_RegPhNum() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method allows for custom integration with other Java components.
	 * You may use Java for sophisticated logic or to integrate with custom
	 * connectors (i.e. JMS, custom web services, sockets, XML, JAXB, etc.)
	 *
	 * Any custom code added here should work as efficiently as possible to prevent delays.
	 * It's important to design your callflow so that the voice browser (Voice Portal/IR)
	 * is not waiting too long for a response as this can lead to a poor caller experience.
	 * Additionally, if the response to the client voice browser exceeds the configured
	 * timeout, the platform may throw an "error.badfetch". 
	 *
	 * Using this method, you have access to all session variables through the 
	 * SCESession object.
	 *
	 * The code generator will *** NOT *** overwrite this method in the future.
	 * Last generated by Orchestration Designer at: 2016-JUN-10  11:42:02 AM
	 */
	public void servletImplementation(com.avaya.sce.runtimecommon.SCESession mySession) {

		// TODO: Add your code here!
		String PhNum =AppConstant.EMPTY_STRING;
		String EndpointURL =AppConstant.EMPTY_STRING,AUTH_KEY =AppConstant.EMPTY_STRING,EDUID =AppConstant.EMPTY_STRING;
		String attribute = "Message", Result_status = AppConstant.EMPTY_STRING,testResp = AppConstant.EMPTY_STRING;
		
		try
		{
			PhNum = mySession.getVariableField(IProjectVariables.DM__GET_REGISTERED_PH_NUM__MENU,IProjectVariables.DM__GET_REGISTERED_PH_NUM__MENU_FIELD_VALUE).getStringValue();
			EndpointURL = mySession.getVariableField(IProjectVariables.WS__CHK__REG__PH_NUM,IProjectVariables.WS__CHK__REG__PH_NUM_FIELD_ENDPOINT_URL).getStringValue();
			AUTH_KEY = 	mySession.getVariableField(IProjectVariables.AUTH__KEY).getStringValue();	
			EDUID =  mySession.getVariableField(IProjectVariables.EDUID).getStringValue();
			
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"Web service operation - Validate Registered Mobile Number", mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"REGISTERED_NUMBER - "+PhNum, mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"EndpointURL - "+EndpointURL, mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"INT_INTERACTION_TYPE - 0", mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"INT_SERVICE_TYPE - 0", mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"INT_VALIDATE_TYPE - 0", mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"AUTH_KEY - "+ AUTH_KEY, mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"EDUID - "+ EDUID, mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"PRODUCT_CODE - RGCIVR", mySession);
			
			RGC_ServicesSoapProxy servInst= new RGC_ServicesSoapProxy();
			servInst.setEndpoint(mySession.getVariableField(IProjectVariables.WS__CHK__REG__PH_NUM,IProjectVariables.WS__CHK__REG__PH_NUM_FIELD_ENDPOINT_URL).getStringValue());
			testResp = servInst.validateCustomer(mySession.getVariableField(IProjectVariables.AUTH__KEY).getStringValue(), mySession.getVariableField(IProjectVariables.EDUID).getStringValue(), 0,mySession.getVariableField(IProjectVariables.DM__GET_REGISTERED_PH_NUM__MENU,IProjectVariables.DM__GET_REGISTERED_PH_NUM__MENU_FIELD_VALUE).getStringValue(),"", 0, 0, "RGCIVR", new StringHolder(""), new StringHolder(""));
			
			XMLParser obj = new XMLParser();
			Result_status = obj.parseXML(testResp,attribute);
			
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"Webservice operation SUCCESS", mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO," REPSONSE  XML is - "+testResp, mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO," Result_status  is - "+Result_status, mySession);
			
			mySession.getVariableField(IProjectVariables.WS__CHK__REG__PH_NUM,IProjectVariables.WS__CHK__REG__PH_NUM_FIELD_OUT__STR_MESSAGE).setValue(Result_status);
			mySession.getVariableField(IProjectVariables.WS__CHK__REG__PH_NUM,IProjectVariables.WS__CHK__REG__PH_NUM_FIELD_OUT__STR_RESPONSE_XML).setValue(testResp);
			
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"RespMsg is - "+Result_status, mySession);
			TraceInfo.trace(ITraceInfo.TRACE_LEVEL_INFO,"RespXml is - "+testResp, mySession);
			
	}
	catch (Exception e) 
	{
		StringWriter sw = new StringWriter();
		PrintWriter pw = new PrintWriter(sw);
		e.printStackTrace(pw);
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_ERROR,"Webservice operation failed  - "+sw.toString(), mySession);
		TraceInfo.trace(ITraceInfo.TRACE_LEVEL_ERROR,"Webservice operation failed  - "+ e.getMessage(), mySession);
		mySession.getVariableField(IProjectVariables.FLAG__APPLICATION__ERROR).setValue(AppConstant.TRUE);	
	}
	}
	/**
	 * Builds the list of branches that are defined for this servlet object.
	 * This list is built automatically by defining Goto nodes in the call flow editor.
	 * It is the programmer's responsibilty to provide at least one enabled Goto.<BR>
	 *
	 * The user should override updateBranches() to determine which Goto that the
	 * framework will activate.  If there is not at least one enabled Goto item, 
	 * the framework will throw a runtime exception.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of branches for the flow item, override:
	 *     <code>updateBranches(Collection branches, SCESession mySession)</code>
	 *
	 * @return a Collection of <code>com.avaya.sce.runtime.Goto</code>
	 * objects that will be evaluated at runtime.  If there are no gotos
	 * defined in the Servlet node, then this returns null.
	 * Last generated by Orchestration Designer at: 2016-JUN-23  05:13:22 PM
	 */
	public java.util.Collection getBranches(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Goto aGoto = null;
		list = new java.util.ArrayList(1);

		aGoto = new com.avaya.sce.runtime.Goto("RGC_Flow-DAT_Chk_WS_Resp", 0, true, "Default");
		list.add(aGoto);

		return list;
	}
}
