package flow.subflow.PostpaidStartFlow;

import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.SCESession;
import com.servion.hsd.utils.AppConstant;
import com.servion.hsd.utils.Constants;
import com.servion.hsd.utils.PrintStackTrace;
import com.servion.prepaid.report.GetReportObject;
import com.servion.prepaid.report.IVRREPORTDATA;
import com.servion.prepaid.report.IVRREPORTDATA.CALLINFO;
import com.servion.util.IVRDataBean;

import flow.IProjectVariables;


/**
 * The Data class handles many types of server-side operations including data
 * collection (from a data sources such as a database, or web service), variable
 * assignments and operations (like copying variable values, performing mathematic
 * operations, and collection iteration), conditional evaluation to control callflow
 * execution based on variable values, and logging/tracing statements.
 * 
 * Items created in the getDataActions() method are executed/evaluated in order
 * and if a condional branch condition evaluates to "true" then the branch is
 * activated and the execution of data actions is halted.  If no "true" conditions
 * are encountered, then all data actions will be executed/evaluated and the 
 * application will proceed to the "Default" servlet.
 * Last generated by Orchestration Designer at: 2015-APR-13  04:11:29 PM
 */
public class Initialize_MN_0005 extends com.avaya.sce.runtime.Data {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	@Override
	public void requestBegin(SCESession mySession) {
		super.requestBegin(mySession);
		
		ITraceInfo info = mySession.getTraceOutput();
		String strInitialAudio = null;
		String strCurrentLanguage = "", strApplicationName = "", strProperty = "";
		String strHNIFlag = "";
		IVRDataBean ivrDataBean = null;
		
		
		try {
			ivrDataBean = (IVRDataBean) mySession.getProperty(Constants.IVRDATABEAN);
			GetReportObject getReportObject = ivrDataBean.getGetReportObject();
			IVRREPORTDATA ivrreportdata = getReportObject.getIvrreportdata();
			CALLINFO callInfo = ivrreportdata.getCALLINFO();
			callInfo.setLANGUAGEFROM(mySession.getCurrentLanguage());
			ivrreportdata.setCALLINFO(callInfo);
			
			strApplicationName = mySession.getVariableField(IProjectVariables.POSTPAID__CALL_DATA, IProjectVariables.POSTPAID__CALL_DATA_FIELD_APPLICATION_NAME).getStringValue();
			strHNIFlag = mySession.getVariableField(IProjectVariables.FLAG, IProjectVariables.FLAG_FIELD_HNICALLER).getStringValue();
			info = mySession.getTraceOutput();
			
			if(strHNIFlag.equalsIgnoreCase(Constants.Yes)){
				strProperty = AppConstant.MainMenu_MN_0005_HNI;
				mySession.getVariableField(IProjectVariables.DM_INPUT_PARAMETER , IProjectVariables.DM_INPUT_PARAMETER_FIELD_GLOBAL_PROPERTY_FILE_NAME).setValue(mySession.getVariableField(IProjectVariables.PROPERTY_FILE_NAME, IProjectVariables.PROPERTY_FILE_NAME_FIELD_GLOBAL__HNI).getStringValue());
			}else{
				strProperty = AppConstant.MainMenu_MN_0005;
				mySession.getVariableField(IProjectVariables.DM_INPUT_PARAMETER , IProjectVariables.DM_INPUT_PARAMETER_FIELD_GLOBAL_PROPERTY_FILE_NAME).setValue(mySession.getVariableField(IProjectVariables.PROPERTY_FILE_NAME, IProjectVariables.PROPERTY_FILE_NAME_FIELD_GLOBAL__NORMAL).getStringValue());
			}
			mySession.getVariableField(IProjectVariables.DM_INPUT_PARAMETER, IProjectVariables.DM_INPUT_PARAMETER_FIELD_PROPERTY_FILE_NAME).setValue(strProperty);
			info.writeln(ITraceInfo.TRACE_LEVEL_DEBUG, "Main Menu Property:"+strProperty);
				
			
		} catch (Exception e) {
			PrintStackTrace.PrintException(e);
			info.writeln(ITraceInfo.TRACE_LEVEL_ERROR, "Exception:"+e.getMessage());
		}
		
	}
	
	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2015-APR-13  04:11:29 PM
	 */
	public Initialize_MN_0005() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * Returns the Next item which will forward application execution
	 * to the next form in the call flow.
	 * Last generated by Orchestration Designer at: 2016-AUG-11  02:39:06 PM
	 */
	public com.avaya.sce.runtime.Next getNext(com.avaya.sce.runtimecommon.SCESession mySession) {
		com.avaya.sce.runtime.Next next = null;
		return next;
	}
	/**
	 * Create a list of local variables used by items in the data node.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2016-AUG-11  02:39:06 PM
	 */
	public java.util.Collection<VariableInfo> getLocalVariables(){
		java.util.Collection<VariableInfo> variables = new java.util.ArrayList<VariableInfo>();

		return variables;
	}
	/**
	 * Creates and conditionally executes operations that have been configured
	 * in the Callflow.  This method will build a collection of operations and
	 * have the framework execute the operations by calling evaluateActions().
	 * If the evaluation causes the framework to forward to a different servlet
	 * then execution stops.
	 * Returning true from this method means that the framework has forwarded the
	 * request to a different servlet.  Returning false means that the default
	 * Next will be invoked.
	 * 
	 * This method is generated automatically by the code generator
	 * and should not be manually edited.  Manual edits may be overwritten
	 * by the code generator.
	 * Last generated by Orchestration Designer at: 2016-AUG-11  02:39:06 PM
	 */
	public boolean executeDataActions(com.avaya.sce.runtimecommon.SCESession mySession) throws Exception {
		java.util.Collection actions = null;

		actions = new java.util.ArrayList(4);
		actions.add(new com.avaya.sce.runtime.varoperations.Increment("Postpaid_CallData:mainMenuCount").setDebugId(5922));
		actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "---> Main Menu Count :", "Postpaid_CallData:mainMenuCount").setDebugId(5923));
		actions.add(new com.avaya.sce.runtime.tracking.TraceInfo(com.avaya.sce.runtimecommon.ITraceInfo.TRACE_LEVEL_DEBUG, "---> Allowed Main Menu Count :", "Postpaid_CallData:allowedMainMenuCount").setDebugId(5924));
		if(evaluateActions(actions, mySession)) {
			return true;
		}
		actions = null;

		if(((com.avaya.sce.runtime.Condition)new com.avaya.sce.runtime.Condition("condition1", "Postpaid_CallData:mainMenuCount", com.avaya.sce.runtime.Expression.INT_LESS_THAN_EQUAL, "Postpaid_CallData:allowedMainMenuCount", true).setDebugId(5925)).evaluate(mySession)) {
			actions = new java.util.ArrayList(16);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Flag:CalledFromIntelligent", "Postpaid_Constants:no", false).setDebugId(5926));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isCallDateValid", "Postpaid_Constants:no", false).setDebugId(5927));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isCallerDunned", "Postpaid_Constants:no", false).setDebugId(5928));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isDNCDeregistrationDone", "Postpaid_Constants:no", false).setDebugId(5929));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isDNCRegistrationDone", "Postpaid_Constants:no", false).setDebugId(5930));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isFromEventBased", "Postpaid_Constants:no", false).setDebugId(5931));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isFromILDActivation", "Postpaid_Constants:no", false).setDebugId(5932));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isFromInteractionHistory", "Postpaid_Constants:no", false).setDebugId(5933));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isLinkDown", "Postpaid_Constants:no", false).setDebugId(5934));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isPTPSRPResent", "Postpaid_Constants:no", false).setDebugId(5935));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isSLADateValid", "Postpaid_Constants:no", false).setDebugId(5936));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isTotalExposureValid", "Postpaid_Constants:no", false).setDebugId(5937));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isValidNumber", "Postpaid_Constants:no", false).setDebugId(5938));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isVASSuccessful", "Postpaid_Constants:no", false).setDebugId(5939));
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("Postpaid_Flag:isVoiceOffer", "Postpaid_Constants:no", false).setDebugId(5940));
			actions.add(new com.avaya.sce.runtime.Next("PostpaidStartFlow-MainMenu_MN_0005", "MainMenu").setDebugId(5941));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;

		} else {
			actions = new java.util.ArrayList(2);
			actions.add(new com.avaya.sce.runtime.varoperations.Assign("AppVariables:TransferPoint", "TransferPoints:HSDI_TR_0027", false).setDebugId(5943));
			actions.add(new com.avaya.sce.runtime.Next("PostpaidStartFlow-PostpaidTransfer", "Transfer").setDebugId(5944));
			if(evaluateActions(actions, mySession)) {
				return true;
			}
			actions = null;
		}


		// return false if the evaluation of actions did not cause a servlet forward or redirect
		return false;
	}
}
